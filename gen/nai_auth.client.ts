// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "nai_auth.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { AuthService } from "./nai_auth";
import type { RefreshTokenResponse } from "./nai_auth";
import type { RefreshTokenRequest } from "./nai_auth";
import type { SignInResponse } from "./nai_auth";
import type { SignInRequest } from "./nai_auth";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { Empty } from "./nai_auth";
import type { RegisterRequest } from "./nai_auth";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service AuthService
 */
export interface IAuthServiceClient {
    /**
     * @generated from protobuf rpc: Register(RegisterRequest) returns (Empty);
     */
    register(input: RegisterRequest, options?: RpcOptions): UnaryCall<RegisterRequest, Empty>;
    /**
     * @generated from protobuf rpc: SignIn(SignInRequest) returns (SignInResponse);
     */
    signIn(input: SignInRequest, options?: RpcOptions): UnaryCall<SignInRequest, SignInResponse>;
    /**
     * @generated from protobuf rpc: RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);
     */
    refreshToken(input: RefreshTokenRequest, options?: RpcOptions): UnaryCall<RefreshTokenRequest, RefreshTokenResponse>;
}
/**
 * @generated from protobuf service AuthService
 */
export class AuthServiceClient implements IAuthServiceClient, ServiceInfo {
    typeName = AuthService.typeName;
    methods = AuthService.methods;
    options = AuthService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Register(RegisterRequest) returns (Empty);
     */
    register(input: RegisterRequest, options?: RpcOptions): UnaryCall<RegisterRequest, Empty> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<RegisterRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SignIn(SignInRequest) returns (SignInResponse);
     */
    signIn(input: SignInRequest, options?: RpcOptions): UnaryCall<SignInRequest, SignInResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<SignInRequest, SignInResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);
     */
    refreshToken(input: RefreshTokenRequest, options?: RpcOptions): UnaryCall<RefreshTokenRequest, RefreshTokenResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<RefreshTokenRequest, RefreshTokenResponse>("unary", this._transport, method, opt, input);
    }
}
