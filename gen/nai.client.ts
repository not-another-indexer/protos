// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "nai.proto" (package "nai", syntax proto3)
// tslint:disable
import { GalleryService } from "./nai";
import type { SearchImagesResponse } from "./nai";
import type { SearchImagesRequest } from "./nai";
import type { GetImageContentResponse } from "./nai";
import type { GetImageContentRequest } from "./nai";
import type { DeleteImageRequest } from "./nai";
import type { AddImageResponse } from "./nai";
import type { AddImageRequest } from "./nai";
import type { GetGalleryImagesResponse } from "./nai";
import type { GetGalleryImagesRequest } from "./nai";
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { MainService } from "./nai";
import type { Empty } from "./nai";
import type { DeleteGalleryRequest } from "./nai";
import type { GetGalleriesResponse } from "./nai";
import type { GetGalleriesRequest } from "./nai";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { CreateGalleryResponse } from "./nai";
import type { CreateGalleryRequest } from "./nai";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Services
 *
 * @generated from protobuf service nai.MainService
 */
export interface IMainServiceClient {
    /**
     * @generated from protobuf rpc: CreateGallery(nai.CreateGalleryRequest) returns (nai.CreateGalleryResponse);
     */
    createGallery(input: CreateGalleryRequest, options?: RpcOptions): UnaryCall<CreateGalleryRequest, CreateGalleryResponse>;
    /**
     * No request parameters
     *
     * @generated from protobuf rpc: GetGalleries(nai.GetGalleriesRequest) returns (nai.GetGalleriesResponse);
     */
    getGalleries(input: GetGalleriesRequest, options?: RpcOptions): UnaryCall<GetGalleriesRequest, GetGalleriesResponse>;
    /**
     * @generated from protobuf rpc: DeleteGallery(nai.DeleteGalleryRequest) returns (nai.Empty);
     */
    deleteGallery(input: DeleteGalleryRequest, options?: RpcOptions): UnaryCall<DeleteGalleryRequest, Empty>;
}
/**
 * Services
 *
 * @generated from protobuf service nai.MainService
 */
export class MainServiceClient implements IMainServiceClient, ServiceInfo {
    typeName = MainService.typeName;
    methods = MainService.methods;
    options = MainService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: CreateGallery(nai.CreateGalleryRequest) returns (nai.CreateGalleryResponse);
     */
    createGallery(input: CreateGalleryRequest, options?: RpcOptions): UnaryCall<CreateGalleryRequest, CreateGalleryResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateGalleryRequest, CreateGalleryResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * No request parameters
     *
     * @generated from protobuf rpc: GetGalleries(nai.GetGalleriesRequest) returns (nai.GetGalleriesResponse);
     */
    getGalleries(input: GetGalleriesRequest, options?: RpcOptions): UnaryCall<GetGalleriesRequest, GetGalleriesResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetGalleriesRequest, GetGalleriesResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteGallery(nai.DeleteGalleryRequest) returns (nai.Empty);
     */
    deleteGallery(input: DeleteGalleryRequest, options?: RpcOptions): UnaryCall<DeleteGalleryRequest, Empty> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteGalleryRequest, Empty>("unary", this._transport, method, opt, input);
    }
}
/**
 * @generated from protobuf service nai.GalleryService
 */
export interface IGalleryServiceClient {
    /**
     * @generated from protobuf rpc: GetGalleryImages(nai.GetGalleryImagesRequest) returns (nai.GetGalleryImagesResponse);
     */
    getGalleryImages(input: GetGalleryImagesRequest, options?: RpcOptions): UnaryCall<GetGalleryImagesRequest, GetGalleryImagesResponse>;
    /**
     * @generated from protobuf rpc: AddImage(nai.AddImageRequest) returns (nai.AddImageResponse);
     */
    addImage(input: AddImageRequest, options?: RpcOptions): UnaryCall<AddImageRequest, AddImageResponse>;
    /**
     * @generated from protobuf rpc: DeleteImage(nai.DeleteImageRequest) returns (nai.Empty);
     */
    deleteImage(input: DeleteImageRequest, options?: RpcOptions): UnaryCall<DeleteImageRequest, Empty>;
    /**
     * @generated from protobuf rpc: GetImageContent(nai.GetImageContentRequest) returns (nai.GetImageContentResponse);
     */
    getImageContent(input: GetImageContentRequest, options?: RpcOptions): UnaryCall<GetImageContentRequest, GetImageContentResponse>;
    /**
     * @generated from protobuf rpc: SearchImages(nai.SearchImagesRequest) returns (nai.SearchImagesResponse);
     */
    searchImages(input: SearchImagesRequest, options?: RpcOptions): UnaryCall<SearchImagesRequest, SearchImagesResponse>;
}
/**
 * @generated from protobuf service nai.GalleryService
 */
export class GalleryServiceClient implements IGalleryServiceClient, ServiceInfo {
    typeName = GalleryService.typeName;
    methods = GalleryService.methods;
    options = GalleryService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetGalleryImages(nai.GetGalleryImagesRequest) returns (nai.GetGalleryImagesResponse);
     */
    getGalleryImages(input: GetGalleryImagesRequest, options?: RpcOptions): UnaryCall<GetGalleryImagesRequest, GetGalleryImagesResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetGalleryImagesRequest, GetGalleryImagesResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AddImage(nai.AddImageRequest) returns (nai.AddImageResponse);
     */
    addImage(input: AddImageRequest, options?: RpcOptions): UnaryCall<AddImageRequest, AddImageResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<AddImageRequest, AddImageResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteImage(nai.DeleteImageRequest) returns (nai.Empty);
     */
    deleteImage(input: DeleteImageRequest, options?: RpcOptions): UnaryCall<DeleteImageRequest, Empty> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteImageRequest, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetImageContent(nai.GetImageContentRequest) returns (nai.GetImageContentResponse);
     */
    getImageContent(input: GetImageContentRequest, options?: RpcOptions): UnaryCall<GetImageContentRequest, GetImageContentResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetImageContentRequest, GetImageContentResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SearchImages(nai.SearchImagesRequest) returns (nai.SearchImagesResponse);
     */
    searchImages(input: SearchImagesRequest, options?: RpcOptions): UnaryCall<SearchImagesRequest, SearchImagesResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<SearchImagesRequest, SearchImagesResponse>("unary", this._transport, method, opt, input);
    }
}
